name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  create:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always
  LEAPSDK_LIB_PATH: leap-sdk-redist/LeapSDK/lib/x64

jobs:
  clippy:
    name: clippy
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v1
      - name: Style
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy -- -D warnings
  build:
    strategy:
      matrix:
        include:
          - sdk-ver: gemini
            cargo-features: --no-default-features --features default-boxed --features gemini
          - sdk-ver: orion
            cargo-features: --no-default-features --features default-boxed
    name: build
    if: eq(${{ github.repository }}, "plule/theremotion") # no secrets in clones
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/checkout@v3
      with:
        ref: ${{ matrix.sdk-ver }}
        repository: plule/leap-sdk-redist
        token: ${{ secrets.LEAP_SDK_REDIST_PAT }}
        path: leap-sdk-redist
    - uses: Swatinem/rust-cache@v1
    - name: Build
      run: cargo build --release ${{ matrix.cargo-features }}
    - name: Prepare release
      run: |
        mkdir -p theremotion-${{ matrix.sdk-ver }}
        cp target/release/theremotion.exe theremotion-${{ matrix.sdk-ver }}
        cp target/release/theremotion.exe theremotion-${{ matrix.sdk-ver }}.exe
        cp leap-sdk-redist/LeapSDK/lib/x64/LeapC.dll theremotion-${{ matrix.sdk-ver }}
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'theremotion-${{ matrix.sdk-ver }}.zip'
        path: theremotion-${{ matrix.sdk-ver }}
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.sdk-ver }}
        path: |
          theremotion-${{ matrix.sdk-ver }}.zip
          theremotion-${{ matrix.sdk-ver }}.exe
  release:
    needs:
      - build
      - clippy
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
    - uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          orion/theremotion-orion.zip
          orion/theremotion-orion.exe
          gemini/theremotion-gemini.zip
          gemini/theremotion-gemini.exe

  dependabot:
    name: 'Dependabot automerge'
    needs:
      - clippy
      - build
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}} # Detect that the PR author is dependabot
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
